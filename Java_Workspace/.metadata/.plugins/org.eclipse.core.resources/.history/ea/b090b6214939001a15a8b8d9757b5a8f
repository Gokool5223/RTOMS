package com.app.dao;

import java.util.List;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.pojos.QuestionOptions;

@Service
@Transactional
public class QuestionsOptionsDaoImpl implements IQuestionsOptionsDao
{
	@Autowired
	private SessionFactory sf;

	@Override
	public List<QuestionOptions> listQuestionOptions() {
		String jpql="select q from QuestionOptions q where quesOpId=1 ";
		return sf.getCurrentSession().createQuery(jpql,QuestionOptions.class).getResultList();
	}

	@Override
	public List<QuestionOptions> getQuestionOptionsByQuestionId(int questionId) {
		
		String jpql="select q from QuestionOptions q where quesOpId=:questionId ";
		return sf.getCurrentSession().createQuery(jpql,QuestionOptions.class).setParameter("questionId", questionId).getResultList();
	}

	@Override
	public void saveQuestionOptions(QuestionOptions questionOptions) {
		sf.getCurrentSession().saveOrUpdate(questionOptions);
		
	}

	@Override
	public void updateQuestionOptions(QuestionOptions questionOptions) {
		sf
		.getCurrentSession()
		.createQuery(
				"UPDATE QuestionOptions  SET ansDescription=:ansDescription ,questionId=:questionId where quesOpId=:quesOpId")
		.setParameter("ansDescription",
				questionOptions.getAnsDescription()).setParameter(
				"questionId", questionOptions.getQuestionsId())
		.setParameter("quesOpId", questionOptions.getQuesOpId())
		.executeUpdate();
		
	}

	@Override
	public void deleteQuestionOptionsByQuestionId(int questionId) {
		sf.getCurrentSession().createQuery(
				"delete from  QuestionOptions where questionId=:questionId")
				.setParameter("questionId", questionId).executeUpdate();
		
	}
	

}
